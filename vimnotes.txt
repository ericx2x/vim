f - find next types character on line of cursor
x - delete character
w or W - move forward on word
b or B - move backward on word
A - go to end of line and get into insert mode
Ctrl-] - go to other location (declaration) of function
g - global. Can prepend with Ctrl-] to get many location of other occurence of string or function whatever (they call this tags)
$ - move cursor to end of current line
^ - move cursor to start of current line
60% - move cursor 60% down the file
` - take to next occurence of word you&#39;re currently on
% - jump to beginning or end of brackets { } (it toggles)
"+y - copy to system clipboard
<leader>cc - comment out code but must be used with nerdcommenter plugin

v - enter visual mode at cursor
V - enter visual mode on whole line
<< - tab indent lines from visual mode after selecting lines

:20vs . - visual split on current working directory (dont forget period)
Ctrl-W - switch between windows

zt, zb, zz - similar to below but moves cursor
H - move cursor to high(top) of screen
M - move cursor to center of screen
L - move cursor to bottom (low) of screen
Ctrl-U, Ctrl-D - scroll up and down Ctrl-E, Ctrl-Y single line scrolling
Ctrl-O go to previous line (in any file)

:16 - jump to line 16
11j - jump down 11 lines from current cursor location
gg- top of the file
G - jump to bottom of file

gf - go to file on places like import &#39;whatever/mytxt.md&#39;
:tabnew - creates a new tab gT gG to switch between tabs
va)  - visual at ( ) grabs everything inside ( ) also then follow it up with S for surround and surround the text with something
cst - change surround tag 
dap - delete a paragraph
gUaW - go uppercase a word, uppercases current cursor&#39;s word
3ce - deletes everything from cursor to the right of current word
ci*singlequote* - change inside single quotes *singlequote*changeme*singlequote*
ciw - change inside w

buffers (vim doesnt use tabs but files proxies aka buffers)
:e - edit a new file and open in a buffer
:find - finds file in current project direcotry
:bn - go to next buffer
:bp - go to previous buffer
:ls - list all buffers
:set un/hidden - stop have buffers yelling that you made no edits
:b {filename} - go to buffer based on filename
:b{numberid} - go to buffer based on buffer id from ls
:bd {numberid} - removes a buffer but asks if to save it before, closes current buffer by default
:bw - really delete buffer
:buffers - print all buffers
:bufdo {cmd} - executre command for all buffers
:n - go to next file based on arg list
:arga {files} - add file to argslist
:arg1 {files} - save a local copy via {files}
:args - print all arguments

:h {args} - help. so :h navigation

vimtutor

vscode - install vim extension - enable easymotion - type \\w or \\b

:set path+=** Find files: https://stackoverflow.com/questions/3554719/find-a-file-via-recursive-directory-search-in-vim                             
:set wildignore+=**/node_modules/** 

:vimgrep /loremipsum/ **     - Look for loremipsum string in the project directory
:cope - tool for selecting all the occurences with the above command
:cw - shorthand for above
:cnext  - next for above
:cprev - previous for above
:bufdo vimgrepadd yourstringhere % | copen   - find string in open buffers
:Ag yourstringhere - make sure to install silver_searcher and FZF
https://stackoverflow.com/questions/38398787/how-do-i-search-in-all-files-of-my-project-using-vim

what&#39;s possible in vim:
https://www.youtube.com/watch?v=E-ZbrtoSuzw

Click and hold the full-screen button in the upper-left corner of a window. As you hold the button, the window shrinks and you can drag it to the left or right side of the screen. Release the button, then click a window on the other side of the screen to begin using both windows side by side.

Versioning Problem:
https://vi.stackexchange.com/questions/11058/how-do-i-run-homebrew-vi-on-macos-instead-of-the-older-version-apple-provided

tmux:
https://gist.github.com/michaellihs/b6d46fa460fa5e429ea7ee5ff8794b96#commands

plugins:
https://gist.githubusercontent.com/simonista/8703722/raw/d08f2b4dc10452b97d3ca15386e9eed457a53c61/.vimrc
https://github.com/ThePrimeagen/dotvim

https://www.reddit.com/r/vim/comments/dp0kpd/what_vim_plugins_is_he_using_here/ 
